// Copyright (c) Serendipity Project Contributors
// All rights reserved.
// Licensed under the terms of the GNU General Public License version 3 or later.

@import url("https://fonts.googleapis.com/css?family=Source+Code+Pro:700&display=swap");

$exprDefaults: (
  "accessor": darkslategray,
  "arithmetic": midnightblue,
  "call": blueviolet,
  "closure": purple,
  "compare": darkcyan,
  "if": mediumvioletred,
  "list": darkgreen,
  "name": darkorange,
  "number": red,
  "procedure": firebrick,
  "string": lime,
  "tuple": green,
  "void": black,
  "with": palevioletred,
);

svg.camino {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;

  * {
    margin: 0;
    padding: 0;
  }

  .fill {
    height: 100%;
    width: 100%;
  }

  rect.background.fill {
    fill: var(--background, #f0f0f0);
  }
  circle.peg {
    fill: var(--camino-peg, #aaaaaa);
  }

  .draggable {
    cursor: grab;
  }

  .nomouse {
    pointer-events: none;
    touch-action: none;
  }

  .inline.button {
    stroke: var(--white, white);
    stroke-width: 2px;
    fill: #ffffff20;

    opacity: 0.4;

    cursor: pointer;

    &:hover {
      opacity: 0.8;
    }

    line {
      stroke: var(--white, white);
      stroke-linecap: round;
      stroke-width: 4px;
    }
  }

  .syntax {
    .boundary {
      stroke: #00000040;
      stroke-width: 2;
    }

    &.global {
      &.main > rect {
        fill: var(--camino-global-main, red);
      }
      &.definefunction > rect {
        fill: var(--camino-global-definefunction, purple);
      }
      &.define > rect {
        fill: var(--camino-global-define, blue);
      }
    }

    &.expression {
      // This is the configuration used by binders
      &.source {
        &:hover {
          filter: url(#dropShadow);
        }

        &:not(:hover) > path {
          stroke-dasharray: 6 4;
          fill: #00000000;
          stroke: white;

          &:hover {
            opacity: unset;
            stroke: #00000040;
            stroke-dasharray: unset;
          }
        }
      }

      @each $name, $default in $exprDefaults {
        &.#{$name} > path {
          fill: var(--camino-expr-#{$name}, $default);
        }
      }
    }
  }

  text {
    font-family: "Source Code Pro", monospace;
    font-weight: 400;
    font-size: 16pt;
    fill: var(--white, white);

    &:not(.button) {
      pointer-events: none;
    }

    /* Linter marks this as unknown, but it does actually change the baseline. */
    dominant-baseline: hanging;

    user-select: none;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
  }

  foreignObject {
    div {
      height: 100%;
      width: 100%;
    }

    input {
      font-family: "Source Code Pro", monospace;
      font-weight: 800;
      font-size: 16pt;
      color: var(--foreground, black);
      box-shadow: none;
      width: calc(100% - 8px);
      height: calc(100% - 2px);
      outline-width: 0;
      border-radius: 5px;
      border: 1px solid var(--foreground, black);
      background-color: #ffffffaa;
      padding: 0 0 0 6px;
      margin: 0;
    }
    input[type="number"] {
      appearance: textfield;
      -moz-appearance: textfield;
      margin: 0;
    }

    input[type="number"]::-webkit-inner-spin-button,
    input[type="number"]::-webkit-outer-spin-button {
      -webkit-appearance: none;
    }

    input[type="text"]:focus {
      outline-width: 0;
    }

    select {
      width: 100%;
      height: 100%;

      font-family: "Source Code Pro", monospace;
      font-weight: 800;
      font-size: 14pt;
      color: white;
      box-shadow: none;

      text-align: center;
      text-align-last: center;

      background-color: #ffffff20;
      border-radius: 5px;
      border: 1px solid black;

      option {
        color: black;
        font-size: 14pt;
      }
    }
  }

  path.drop:hover {
    filter: url(#dropGlow);
  }

  .detached.global > .expression,
  .detached.global > g > g.statement > path {
    filter: url(#dropShadow);
  }

  .global > rect {
    filter: url(#dropShadow);
  }
}
